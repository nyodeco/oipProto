// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: signedMessage.proto

package pb_oip

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Currently supported message types
type MessageTypes int32

const (
	// Invalid
	MessageTypes_InvalidMessage MessageTypes = 0
	// OIP 0.5 record message
	MessageTypes_OIP05 MessageTypes = 1
	// Historian record
	MessageTypes_Historian MessageTypes = 2
	// Multipart
	MessageTypes_Multipart MessageTypes = 3
)

// Enum value maps for MessageTypes.
var (
	MessageTypes_name = map[int32]string{
		0: "InvalidMessage",
		1: "OIP05",
		2: "Historian",
		3: "Multipart",
	}
	MessageTypes_value = map[string]int32{
		"InvalidMessage": 0,
		"OIP05":          1,
		"Historian":      2,
		"Multipart":      3,
	}
)

func (x MessageTypes) Enum() *MessageTypes {
	p := new(MessageTypes)
	*p = x
	return p
}

func (x MessageTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_signedMessage_proto_enumTypes[0].Descriptor()
}

func (MessageTypes) Type() protoreflect.EnumType {
	return &file_signedMessage_proto_enumTypes[0]
}

func (x MessageTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypes.Descriptor instead.
func (MessageTypes) EnumDescriptor() ([]byte, []int) {
	return file_signedMessage_proto_rawDescGZIP(), []int{0}
}

// Currently supported signature verification means
type SignatureTypes int32

const (
	// Invalid
	SignatureTypes_InvalidSignature SignatureTypes = 0
	// FLO address message signing
	SignatureTypes_Flo SignatureTypes = 1
	// Bitcoin address message signing
	// https://tools.bitcoin.com/verify-message/
	SignatureTypes_Btc SignatureTypes = 2
	// Raven address message signing - ToDo
	SignatureTypes_Rvn SignatureTypes = 3
	// Flo transaction is the signature - ToDo
	SignatureTypes_Tx SignatureTypes = 4
)

// Enum value maps for SignatureTypes.
var (
	SignatureTypes_name = map[int32]string{
		0: "InvalidSignature",
		1: "Flo",
		2: "Btc",
		3: "Rvn",
		4: "Tx",
	}
	SignatureTypes_value = map[string]int32{
		"InvalidSignature": 0,
		"Flo":              1,
		"Btc":              2,
		"Rvn":              3,
		"Tx":               4,
	}
)

func (x SignatureTypes) Enum() *SignatureTypes {
	p := new(SignatureTypes)
	*p = x
	return p
}

func (x SignatureTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_signedMessage_proto_enumTypes[1].Descriptor()
}

func (SignatureTypes) Type() protoreflect.EnumType {
	return &file_signedMessage_proto_enumTypes[1]
}

func (x SignatureTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureTypes.Descriptor instead.
func (SignatureTypes) EnumDescriptor() ([]byte, []int) {
	return file_signedMessage_proto_rawDescGZIP(), []int{1}
}

type SignedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Raw Data that was signed by this message
	SerializedMessage []byte `protobuf:"bytes,1,opt,name=SerializedMessage,proto3" json:"SerializedMessage,omitempty"`
	// Specifies the type of contained data for further deserialization
	MessageType MessageTypes `protobuf:"varint,2,opt,name=MessageType,proto3,enum=oipProto.MessageTypes" json:"MessageType,omitempty"`
	// Identifies signature type for verification
	SignatureType SignatureTypes `protobuf:"varint,3,opt,name=SignatureType,proto3,enum=oipProto.SignatureTypes" json:"SignatureType,omitempty"`
	// Public Key used in the signing of original message
	PubKey []byte `protobuf:"bytes,4,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	// Signature of signed message
	Signature []byte `protobuf:"bytes,5,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *SignedMessage) Reset() {
	*x = SignedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signedMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedMessage) ProtoMessage() {}

func (x *SignedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_signedMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedMessage.ProtoReflect.Descriptor instead.
func (*SignedMessage) Descriptor() ([]byte, []int) {
	return file_signedMessage_proto_rawDescGZIP(), []int{0}
}

func (x *SignedMessage) GetSerializedMessage() []byte {
	if x != nil {
		return x.SerializedMessage
	}
	return nil
}

func (x *SignedMessage) GetMessageType() MessageTypes {
	if x != nil {
		return x.MessageType
	}
	return MessageTypes_InvalidMessage
}

func (x *SignedMessage) GetSignatureType() SignatureTypes {
	if x != nil {
		return x.SignatureType
	}
	return SignatureTypes_InvalidSignature
}

func (x *SignedMessage) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *SignedMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_signedMessage_proto protoreflect.FileDescriptor

var file_signedMessage_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6f, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xed, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x0b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6f, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x0d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a,
	0x4b, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x49, 0x50, 0x30, 0x35, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x10, 0x03, 0x2a, 0x49, 0x0a, 0x0e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x6c, 0x6f, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x74, 0x63, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x76, 0x6e, 0x10, 0x03, 0x12,
	0x06, 0x0a, 0x02, 0x54, 0x78, 0x10, 0x04, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x69, 0x70, 0x77, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x6f, 0x69, 0x70, 0x3b, 0x70, 0x62, 0x5f, 0x6f,
	0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_signedMessage_proto_rawDescOnce sync.Once
	file_signedMessage_proto_rawDescData = file_signedMessage_proto_rawDesc
)

func file_signedMessage_proto_rawDescGZIP() []byte {
	file_signedMessage_proto_rawDescOnce.Do(func() {
		file_signedMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_signedMessage_proto_rawDescData)
	})
	return file_signedMessage_proto_rawDescData
}

var file_signedMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_signedMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_signedMessage_proto_goTypes = []interface{}{
	(MessageTypes)(0),     // 0: oipProto.MessageTypes
	(SignatureTypes)(0),   // 1: oipProto.SignatureTypes
	(*SignedMessage)(nil), // 2: oipProto.SignedMessage
}
var file_signedMessage_proto_depIdxs = []int32{
	0, // 0: oipProto.SignedMessage.MessageType:type_name -> oipProto.MessageTypes
	1, // 1: oipProto.SignedMessage.SignatureType:type_name -> oipProto.SignatureTypes
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_signedMessage_proto_init() }
func file_signedMessage_proto_init() {
	if File_signedMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_signedMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_signedMessage_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_signedMessage_proto_goTypes,
		DependencyIndexes: file_signedMessage_proto_depIdxs,
		EnumInfos:         file_signedMessage_proto_enumTypes,
		MessageInfos:      file_signedMessage_proto_msgTypes,
	}.Build()
	File_signedMessage_proto = out.File
	file_signedMessage_proto_rawDesc = nil
	file_signedMessage_proto_goTypes = nil
	file_signedMessage_proto_depIdxs = nil
}
